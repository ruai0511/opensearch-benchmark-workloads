{% set nyc_index_names = [
  "nyc_taxis_0",
  "nyc_taxis_1",
  "nyc_taxis_2",
  "nyc_taxis_3",
  "nyc_taxis_4",
  "nyc_taxis_5",
  "nyc_taxis_6",
  "nyc_taxis_7",
  "nyc_taxis_8",
  "nyc_taxis_9"
] %}
{
      "name": "append-no-conflicts",
      "description": "Indexes the whole document corpus using a setup that will lead to a larger indexing throughput than the default settings and produce a smaller index (higher compression rate). Document ids are unique so all index operations are append only. After that a couple of queries are run.",
      "default": true,
      "schedule": [
        {{ benchmark.collect(parts="../../common_operations/delete_index.json") }},

        {% for i in range(10) %}
        {% with default_index_settings={
          "index.codec": "best_compression",
          "index.refresh_interval": "30s",
          "index.translog.flush_threshold_size": "4g"
        }, index_name="nyc_taxis_{{i}}" %}
        {{ benchmark.collect(parts="../../common_operations/create_index_{{i}}.json")}}
        {% endwith %}
        {% endfor %}

        {% with default_index_settings={}, index_name="nyc_taxis_9" %}
        {{ benchmark.collect(parts="../../common_operations/check_cluster_health.json") }},
        {% endwith %}
        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{bulk_indexing_clients | default(8)}},
          "ignore-response-error-level": "{{error_level | default('non-fatal')}}",
          "index": "{{nyc_index_names}}"
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh"
        },
        {{ benchmark.collect(parts="../../common_operations/force_merge.json") }},
        {
          "operation": "match-all",
          "warmup-iterations": {{ match_all_warmup_iterations or warmup_iterations | default(50) | tojson }},
          "iterations": {{ match_all_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ default_target_throughput or target_throughput | default(3) | tojson }},
          "clients": {{ default_search_clients or search_clients | default(1) }},
          "index": "{{nyc_index_names}}"
        },
        {
          "operation": "range",
          "warmup-iterations": {{ range_warmup_iterations or warmup_iterations | default(50) | tojson }},
          "iterations": {{ range_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ range_target_throughput or target_throughput | default(0.7) | tojson }},
          "clients": {{ range_search_clients or search_clients | default(1) }},
          "index": "{{nyc_index_names}}"
        },
        {
          "operation": "distance_amount_agg",
          "warmup-iterations": {{ distance_amount_agg_warmup_iterations or warmup_iterations | default(50) | tojson }},
          "iterations": {{ distance_amount_agg_iterations or iterations | default(50) | tojson }},
          "target-throughput": {{ distance_amount_agg_target_throughput or target_throughput | default(2) | tojson }},
          "clients": {{ distance_amount_agg_search_clients or search_clients | default(1) }},
          "index": "{{nyc_index_names}}"
        },
        {
          "operation": "autohisto_agg",
          "warmup-iterations": {{ autohisto_agg_warmup_iterations or warmup_iterations | default(50) | tojson }},
          "iterations": {{ autohisto_agg_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ autohisto_agg_target_throughput or target_throughput | default(1.5) | tojson }},
          "clients": {{ autohisto_agg_search_clients or search_clients | default(1) }},
          "index": "{{nyc_index_names}}"
        },
        {
          "operation": "date_histogram_agg",
          "warmup-iterations": {{ date_histogram_agg_warmup_iterations or warmup_iterations | default(50) | tojson }},
          "iterations": {{ date_histogram_agg_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ date_histogram_agg_target_throughput or target_throughput | default(1.5) | tojson }},
          "clients": {{ date_histogram_agg_search_clients or search_clients | default(1) }},
          "index": "{{nyc_index_names}}"
        },
        {
          "operation": "desc_sort_tip_amount",
          "warmup-iterations": {{ desc_sort_tip_amount_warmup_iterations or warmup_iterations | default(50) | tojson }},
          "iterations": {{ desc_sort_tip_amount_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ desc_sort_tip_amount_target_throughput or target_throughput | default(0.5) | tojson }},
          "clients": {{ desc_sort_tip_amount_search_clients or search_clients | default(1) }},
          "index": "{{nyc_index_names}}"
        },
        {
          "operation": "asc_sort_tip_amount",
          "warmup-iterations": {{ asc_sort_tip_amount_warmup_iterations or warmup_iterations | default(50) | tojson }},
          "iterations": {{ asc_sort_tip_amount_iterations or iterations | default(100) | tojson }},
          "target-throughput": {{ asc_sort_tip_amount_target_throughput or target_throughput | default(0.5) | tojson }},
          "clients": {{ asc_sort_tip_amount_search_clients or search_clients | default(1) }},
          "index": "{{nyc_index_names}}"
        }
      ]
    },
    {
      "name": "append-no-conflicts-index-only",
      "description": "Indexes the whole document corpus across 10 indices with optimized settings for higher throughput and compression. Document ids are unique so all index operations are append only.",
      "schedule": [
        {{ benchmark.collect(parts="../../common_operations/delete_index.json") }},

        {% for i in range(10) %}
        {% with index_name="nyc_taxis_{{ i }}", default_index_settings={
          "index.codec": "best_compression",
          "index.refresh_interval": "30s",
          "index.translog.flush_threshold_size": "4g"
        } %}
        {{ benchmark.collect(parts="../../common_operations/create_index_{{i}}.json") }},
        {% endwith %}
        {% endfor %}

        {% with default_index_settings={}, index_name="nyc_taxis_9" %}
        {{ benchmark.collect(parts="../../common_operations/check_cluster_health.json") }},
        {% endwith %}

        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{bulk_indexing_clients | default(8)}},
          "ignore-response-error-level": "{{error_level | default('non-fatal')}}",
          "index": "{{nyc_index_names}}"
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh"
        },
        {{ benchmark.collect(parts="../../common_operations/force_merge.json") }}
      ]
    },
    {
      "name": "append-sorted-no-conflicts-index-only",
      "description": "Indexes the whole document corpus in 10 sorted indices using a setup that leads to higher throughput and better compression.",
      "schedule": [
        {{ benchmark.collect(parts="../../common_operations/delete_index.json") }},
        {% for i in range(10) %}
        {% with default_index_settings={
          "index.codec": "best_compression",
          "index.refresh_interval": "30s",
          "index.translog.flush_threshold_size": "4g",
          "index.sort.field": "pickup_datetime",
          "index.sort.order": "desc"
        }, index_name="nyc_taxis_{{ i }}" %}
        {{ benchmark.collect(parts="../../common_operations/create_index_{{i}}.json") }},
        {% endwith %}
        {% endfor %}
        {% with default_index_settings={}, index_name="nyc_taxis_0" %}
        {{ benchmark.collect(parts="../../common_operations/check_cluster_health.json") }},
        {% endwith %}
        {
          "operation": "index",
          "warmup-time-period": 240,
          "clients": {{ bulk_indexing_clients | default(8) }},
          "ignore-response-error-level": "{{ error_level | default('non-fatal') }}",
          "index": "{{ nyc_index_names }}"
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh"
        },
        {{ benchmark.collect(parts="../../common_operations/force_merge.json") }}
      ]
    },
    {
      "name": "update",
      "schedule": [
        {{ benchmark.collect(parts="../../common_operations/delete_index.json") }},
        {% for i in range(10) %}
        {% with default_index_settings={
          "index.number_of_shards": number_of_shards | default(1),
          "index.number_of_replicas": number_of_replicas | default(0),
          "index.store.type": store_type | default('fs')
        }, index_name="nyc_taxis_{{ i }}" %}
        {{ benchmark.collect(parts="../../common_operations/create_index_{{i}}.json") }},
        {% endwith %}
        {% endfor %}
        {% with default_index_settings={}, index_name="nyc_taxis_0" %}
        {{ benchmark.collect(parts="../../common_operations/check_cluster_health.json") }},
        {% endwith %}
        {
          "operation": "update",
          "warmup-time-period": 1200,
          "clients": {{ bulk_indexing_clients | default(8) }},
          "ignore-response-error-level": "{{ error_level | default('non-fatal') }}",
          "index": "{{ nyc_index_names }}"
        },
        {
          "name": "refresh-after-index",
          "operation": "refresh"
        },
        {{ benchmark.collect(parts="../../common_operations/force_merge.json") }}
      ]
    }
